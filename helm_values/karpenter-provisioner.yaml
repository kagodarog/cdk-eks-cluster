---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
        - key: "karpenter.k8s.aws/instance-category"
          operator: In
          values: ["c", "m"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: "karpenter.k8s.aws/instance-family"
          operator: In
          values: ["m5","m5d","m4"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h # 30 * 24h = 720h
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  role: "arn:aws:iam::146256358142:role/EksStack-CustomNodegroupRole69D93BD3-zeaJDCCBoit5" # replace with your cluster name
  amiSelectorTerms:
    - alias: "al2023@v20250228"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: my-eks-cluster # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        aws:eks:cluster-name: my-eks-cluster # replace with your cluster name
